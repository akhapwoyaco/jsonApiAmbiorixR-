


# Test 6: Create new flight (POST)
echo -e "\n${GREEN}Test 6: Create new flight (POST)${NC}"
curl -v -s -X POST "${API_URL}/flight" -H "Authorization: Bearer ${AUTH_TOKEN}" \
-H "Content-Type: application/json" \
-d '{
    "year": 2023, 
    "month": 5, 
    "day": 15,
    "dep_time": 830, 
    "sched_dep_time": 516, 
    "dep_delay":200,  
    "arr_time":819 , 
    "sched_arr_time":11 ,
    "arr_delay":1,
    "carrier": "AA",
    "flight": 1234, 
    "tailnum": "AC3456", 
    "origin": "JFK", 
    "dest": "LAX",
    "air_time": 334, 
    "distance": 1290  ,
    "hour":4, 
    "minute":25
  }'

echo $? # should be 0 if success
  
  # Test 42: Get average departure delay by airline
  echo -e "\n${GREEN}Test 42: Get average departure delay by airline${NC}"
curl -s -H "Authorization: Bearer ${AUTH_TOKEN}" "${API_URL}/avg-dep-delay/AA" | jq '.'




# Test 8: Delete flight
echo -e "\n${GREEN}Test 8: Delete flight${NC}"
curl -s -X DELETE -H "Authorization: Bearer ${AUTH_TOKEN}" "${API_URL}/1" | jq '.'

# Test 9: Authentication failure
echo -e "\n${GREEN}Test 9: Authentication failure${NC}"
response=$(curl -s "${API_URL}/flight/1")
if echo "$response" | jq '.' &>/dev/null; then
echo "$response" | jq '.'
else
  echo "Raw response (not valid JSON):"
echo "$response"
fi

# Test 10: Authentication with wrong token
echo -e "\n${GREEN}Test 10: Authentication with wrong token${NC}"
curl -s -H "Authorization: Bearer wrong-token-23" "${API_URL}/flight/1" | jq '.'

# Test 11: Rate limit test (will hit rate limit after config$rate_limit requests)
echo -e "\n${GREEN}Test 11: Rate limit test${NC}"
echo "Making multiple requests to test rate limiting..."
for i in {1..105}; do
response=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${AUTH_TOKEN}" "${API_URL}/health")
if [ "$response" == "429" ]; then
echo -e "${RED}Rate limit hit after $i requests${NC}"
break
fi
if [ $i -eq 105 ]; then
echo -e "${RED}Did not hit rate limit after 105 requests, rate limiting may not be working${NC}"
fi
# Print progress every 10 requests
if [ $(($i % 10)) -eq 0 ]; then
echo "$i requests made..."
fi
done
